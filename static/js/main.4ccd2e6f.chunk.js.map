{"version":3,"sources":["components/Navbar.js","components/Lookup.js","components/View.js","components/Router.js","components/pokepedia.png","App.js","reportWebVitals.js","index.js"],"names":["NavBar","style","color","padding","textDecoration","fontWeight","to","useStateWithSessionStorage","key","initialValue","useState","JSON","parse","sessionStorage","getItem","value","setValue","useEffect","newVal","stringify","setItem","Lookup","addFunc","data","setData","searchTerm","setSearchTerm","a","fetch","response","json","responseData","name","sprites","front_default","id","stats","base_stat","weight","height","onChange","e","target","placeholder","backgroundColor","onClick","image","src","className","alt","textTransform","class","hp","attack","defense","spattack","spdef","speed","ViewList","pokeList","map","poke","width","Router","setPokeList","path","newPoke","copyList","push","from","App","img","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ccd2e6f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = ({}) => {\n    return(\n        <nav>\n            <Link style={{color:\"white\", padding: 20, textDecoration: 'none', fontWeight:'bold'}} to=\"/lookup\">Lookup</Link>\n            <Link style={{color:\"white\", padding: 20, textDecoration: 'none', fontWeight:'bold'}} to=\"/view\">View</Link>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\n\nconst useStateWithSessionStorage = (key, initialValue) => {\n  const [value, setValue] = useState(\n    JSON.parse(sessionStorage.getItem(key)) || initialValue\n  );\n\n  useEffect(() => {\n    const newVal = JSON.stringify(value);\n    sessionStorage.setItem(key, newVal);\n    }, [value])\n\n  return [value, setValue];\n}\n\nexport default function Lookup({ addFunc }) {\n  const [data, setData] = useStateWithSessionStorage(\"data\", {});\n  const [searchTerm, setSearchTerm] = useStateWithSessionStorage(\"searchTerm\", \"\");\n\n  async function getData() {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${searchTerm}`);\n    const responseData = await response.json()\n    setData({\"name\": responseData.name, \n             \"image\": responseData.sprites.front_default, \n             \"id\": responseData.id,\n             \"hp\": responseData.stats[0].base_stat,\n             \"attack\": responseData.stats[1].base_stat,\n             \"defense\": responseData.stats[2].base_stat,\n             \"speed\": responseData.stats[5].base_stat,\n             \"spattack\": responseData.stats[3].base_stat,\n             \"spdef\": responseData.stats[4].base_stat,\n             \"weight\": responseData.weight,\n             \"height\": responseData.height\n            });\n  }\n  \n  return (\n    <div>\n      <br></br>\n      <input value={searchTerm || \"\"} onChange={e => setSearchTerm(e.target.value)} \n      placeholder=\"Enter 'pikachu' or 25\"/>\n      <button style={{color:'white', backgroundColor:'red', fontWeight: 'bold'}} onClick={getData}>Search</button>\n      { data.image && (\n        <div>\n            <img src={data.image} className='img' alt=\"Image\" />\n          <h2 style={{textTransform:\"capitalize\", fontWeight: 'bold'}}>{data.name}</h2>\n          <p>ID: {data.id}</p>\n          <div className=\"bottom-container\">\n            <table>\n              <tr>\n                <th>Base</th>\n                <th>Stats</th>\n              </tr>\n              <tr>\n                <td>HP:</td>\n                <td class=\"hp\">{data.hp}</td>\n              </tr>\n              <tr>\n                <td>Attack:</td>\n                <td class=\"attack\">{data.attack}</td>\n              </tr>\n              <tr>\n                <td>Defense:</td>\n                <td class=\"defense\">{data.defense}</td>\n              </tr>\n              <tr>\n                <td>Special Atk:</td>\n                <td class=\"special-attack\">{data.spattack}</td>\n              </tr>\n              <tr>\n                <td>Special Def:</td>\n                <td class=\"special-defense\">{data.spdef}</td>\n              </tr>\n              <tr>\n                <td>Speed:</td>\n                <td class=\"speed\">{data.speed}</td>\n              </tr>\n            </table>\n          </div>\n          <button style={{color:'white', backgroundColor:'red', fontWeight: 'bold'}} onClick={e => addFunc(data)}>Save</button>\n          <br></br>\n          <br></br>\n        </div>\n      )}\n    </div>\n  )\n}","import React from \"react\";\n\nexport default function ViewList({ pokeList }) {\n\n  function pokeRenderHandler(poke) {\n    return (\n      <div >\n        <img style={{height:'150px', width:'150px' }} src={poke.image} alt={poke.name} />\n        <h6 style={{textTransform: \"capitalize\"}}>{poke.name}</h6>\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      { pokeList.map(pokeRenderHandler) }\n    </div>\n  )\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Lookup from './Lookup';\nimport ViewList from './View';\n\nconst Router = ({ pokeList, setPokeList }) => {\n    function updatePokeList(newPoke) {\n        const copyList = [...pokeList];\n        copyList.push(newPoke);\n        setPokeList(copyList);\n      }\n    \n    return(\n        <div>\n            <Route path=\"/lookup\">\n                <Lookup addFunc={updatePokeList}/>\n            </Route>\n            <Route path=\"/view\">\n                <ViewList pokeList={pokeList}/>\n            </Route>\n            <Redirect from=\"/\" to=\"/lookup\" />\n        </div>\n    )\n}\n\nexport default Router;","export default __webpack_public_path__ + \"static/media/pokepedia.091d4b37.png\";","import React, { useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport NavBar from './components/Navbar';\nimport Router from './components/Router';\nimport './App.css';\nimport img from './components/pokepedia.png';\n\nfunction App() {\n  const [pokeList, setPokeList] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n        <img className='logo1' src={img} />\n        <NavBar />\n        <Router pokeList={pokeList} setPokeList={setPokeList} />\n        </header>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}